//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//   Authors: Many. See MHW Editor Cretits.
// File Mask: *.col
//  Category: MHW_Editor.Weapons
//------------------------------------------------

// Collisions
typedef struct {
    uint Magic_1<name="Magic 1">;
    char Name[4]<optimize=false, name="Name">;
    uint Magic_2<name="Magic 2">;
    uint Unk_1<name="Unk 1">;
    uint Unk_2<name="Unk 2">;
    uint Name_Count<name="Name Count">;
} Collisions;

Collisions Collisions_<name="Collisions">;

// Names
typedef struct {
    string Name<name="Name">;
    int CLGM_Id<name="CLGM Id">;
    int Move_Id<name="Move Id">;
    int Unk_1<name="Unk 1">;
    ushort Unk_2<name="Unk 2">;
    ubyte Unk_3<name="Unk 3">;
    uint Unk_4<name="Unk 4">;
} Names;

Names Names_[Collisions_.Name_Count]<optimize=false, name="Names">;

// CLND
typedef struct {
    uint Magic_1<name="Magic 1">;
    char Name[4]<optimize=false, name="Name">;
    uint Magic_2<name="Magic 2">;
    uint Clgm_Count<name="Clgm Count">;
    uint Clgm_Type<name="Clgm Type">;
    ubyte Unk_1<name="Unk 1">;

    // CLGMs
    typedef struct {
        uint Magic_1<name="Magic 1">;
        char Name[4]<optimize=false, name="Name">;
        uint Magic_2<name="Magic 2">;
        uint Clgm_Inner_Count<name="Clgm Inner Count">;

        // CLGM Inner
        typedef struct {
            ubyte Unk_1<name="Unk 1">;
            ubyte Unk_2<name="Unk 2">;
            float Attack_Range<name="Attack Range">;
            float Unk_4<name="Unk 4">;
            float Unk_5<name="Unk 5">;
            float Unk_6<name="Unk 6">;
            short Unk_7<name="Unk 7">;
            short Unk_8<name="Unk 8">;
            float Unk_9<name="Unk 9">;
            float Unk_10<name="Unk 10">;
            float Unk_11<name="Unk 11">;
            float Unk_12<name="Unk 12">;
            float Unk_13<name="Unk 13">;
            float Unk_14<name="Unk 14">;
            ushort Unk_15<name="Unk 15">;
            uint Unk_16<name="Unk 16">;
            short Unk_17<name="Unk 17">;
            float Unk_18<name="Unk 18">;
            float Unk_19<name="Unk 19">;
            float Unk_20<name="Unk 20">;
            float Unk_21<name="Unk 21">;
            ushort Unk_22<name="Unk 22">;
        } CLGM_Inner;

        CLGM_Inner CLGM_Inner_[Clgm_Inner_Count]<optimize=false, name="CLGM Inner">;
        uint Unk_1<name="Unk 1">;
        uint Attack_Range_if_Unk_1_1_<name="Attack Range (if 'Unk 1' == 1)">;
        ubyte Unk_2<name="Unk 2">;
        ubyte Unk_3<name="Unk 3">;
        ubyte Unk_4<name="Unk 4">;
        ubyte Unk_5<name="Unk 5">;
        uint Unk_6<name="Unk 6">;
        uint Unk_7<name="Unk 7">;
        short Unk_8<name="Unk 8">;
        ushort Unk_9<name="Unk 9">;
        ushort Unk_10<name="Unk 10">;
        if (Clgm_Type == 2) { int Unk_11<name="Unk 11">; }
        if (Clgm_Type == 2) { int Unk_12<name="Unk 12">; }
        if (Clgm_Type == 2) { int Unk_13<name="Unk 13">; }
        if (Clgm_Type == 2) { int Unk_14<name="Unk 14">; }
        if (Clgm_Type == 2) { int Unk_15<name="Unk 15">; }
        if (Clgm_Type == 2) { int Unk_16<name="Unk 16">; }
        if (Clgm_Type == 2) { int Unk_17<name="Unk 17">; }
        if (Clgm_Type == 2) { int Unk_18<name="Unk 18">; }
        ubyte Unk_19<name="Unk 19">;
    } CLGMs;

    CLGMs CLGMs_[Clgm_Count]<optimize=false, name="CLGMs">;
    ubyte Unk_2<name="Unk 2">;
    ubyte Unk_3<name="Unk 3">;
    ubyte Unk_4<name="Unk 4">;
} CLND;

CLND CLND_<name="CLND">;

// Moves
typedef struct {
    uint Magic_1<name="Magic 1">;
    char Name[4]<optimize=false, name="Name">;
    uint Magic_2<name="Magic 2">;
    uint Move_Count<name="Move Count">;
    uint Move_Type<name="Move Type">;

    // Atk0
    typedef struct {
        uint Index<name="Index">;
        uint Unk_1<name="Unk 1">;
        uint Unk_2<name="Unk 2">;
        float Unk_3<name="Unk 3">;
        float Unk_4<name="Unk 4">;
        float Unk_5<name="Unk 5">;
        uint Unk_6<name="Unk 6">;
        uint Unk_7<name="Unk 7">;
        uint Unk_8<name="Unk 8">;
        uint Unk_9<name="Unk 9">;
        uint Unk_10<name="Unk 10">;
        uint Unk_11<name="Unk 11">;
        uint Unk_12<name="Unk 12">;
        uint Unk_13<name="Unk 13">;
        uint Unk_14<name="Unk 14">;
        uint Unk_15<name="Unk 15">;
        uint Unk_16<name="Unk 16">;
        uint Unk_17<name="Unk 17">;
        uint Unk_18<name="Unk 18">;
        uint Unk_19<name="Unk 19">;
        uint Unk_20<name="Unk 20">;
        uint Unk_21<name="Unk 21">;
        uint Unk_22<name="Unk 22">;
        float Unk_23<name="Unk 23">;
        float Unk_24<name="Unk 24">;
        float Unk_25<name="Unk 25">;
        uint Unk_26<name="Unk 26">;
        uint Unk_27<name="Unk 27">;
        uint Unk_28<name="Unk 28">;
        uint Unk_29<name="Unk 29">;
        float Unk_30<name="Unk 30">;
        uint Unk_31<name="Unk 31">;
        uint Unk_32<name="Unk 32">;
        ubyte Unk_33<name="Unk 33">;
        uint Unk_34<name="Unk 34">;
        float Unk_35<name="Unk 35">;
        float Unk_36<name="Unk 36">;
        uint Unk_37<name="Unk 37">;
        uint Unk_38<name="Unk 38">;
        uint Unk_39<name="Unk 39">;
        uint Unk_40<name="Unk 40">;
        uint Unk_41<name="Unk 41">;
        uint Unk_42<name="Unk 42">;
        uint Unk_43<name="Unk 43">;
        uint Unk_44<name="Unk 44">;
        ushort Unk_45<name="Unk 45">;
    } Atk0;

    if (Move_Type == 0) { Atk0 Atk0_[Move_Count]<optimize=false, name="Atk0">; }

    // Atk1
    typedef struct {
        uint Index<name="Index">;
        uint Attack_Type<name="Attack Type">;
        float Motion_Value<name="Motion Value">;
        float Fixed_Damage<name="Fixed Damage">;
        float Part_Modifier<name="Part Modifier">;
        float Elemental_Modifier<name="Elemental Modifier">;
        float Status_Modifier<name="Status Modifier">;
        float Stun<name="Stun">;
        float Exhaust<name="Exhaust">;
        float Mount<name="Mount">;
        float Unk_1<name="Unk 1">;
        float Unk_2<name="Unk 2">;
        ubyte Unk_3<name="Unk 3">;
        float Soften_Value<name="Soften Value">;
        float Unk_4<name="Unk 4">;
        float Unk_5<name="Unk 5">;
        float Unk_6<name="Unk 6">;
        float Unk_7<name="Unk 7">;
        float Unk_8<name="Unk 8">;
        float Unk_9<name="Unk 9">;
        float Unk_10<name="Unk 10">;
        float Unk_11<name="Unk 11">;
        uint Flinch_Value<name="Flinch Value">;
        uint Unk_12<name="Unk 12">;
        ubyte Mind_s_Eye<name="Mind's Eye">;
        float Unk_13<name="Unk 13">;
        float Unk_14<name="Unk 14">;
        ubyte Unk_15<name="Unk 15">;
        float Hit_Lag_Speed_Multiplier_a_<name="Hit Lag Speed Multiplier (a)">;
        float Unk_16<name="Unk 16">;
        float Hit_Lag_a_<name="Hit Lag (a)">;
        float Unk_17<name="Unk 17">;
        float Unk_18<name="Unk 18">;
        float Hit_Lag_Speed_Multiplier_b_<name="Hit Lag Speed Multiplier (b)">;
        float Unk_19<name="Unk 19">;
        float Hit_Lag_b_<name="Hit Lag (b)">;
        float Unk_20<name="Unk 20">;
        float Unk_21<name="Unk 21">;
        uint Unk_22<name="Unk 22">;
        byte Unk_23<name="Unk 23">;
        ubyte Unk_24<name="Unk 24">;
        uint Unk_25<name="Unk 25">;
        float Unk_26<name="Unk 26">;
        float Unk_27<name="Unk 27">;
        float Unk_28<name="Unk 28">;
        ubyte Lingering_Hurtbox<name="Lingering Hurtbox">;
        float Frame_Delay<name="Frame Delay">;
        uint Unk_29<name="Unk 29">;
        ushort Unk_30<name="Unk 30">;
        float Energy_Gen<name="Energy Gen">;
        float Conditional_Motion_value_change_replace<name="Conditional Motion value change/replace">;
        float Conditional_element_modifier_change_replace<name="Conditional element modifier change/replace">;
        uint Unk_31<name="Unk 31">;
        uint Unk_32<name="Unk 32">;
        uint Unk_33<name="Unk 33">;
        uint Unk_34<name="Unk 34">;
        uint Unk_35<name="Unk 35">;
        uint Unk_36<name="Unk 36">;
        uint Unk_37<name="Unk 37">;
        ushort Unk_38<name="Unk 38">;
    } Atk1;

    if (Move_Type == 1) { Atk1 Atk1_[Move_Count]<optimize=false, name="Atk1">; }

    // Atk2
    typedef struct {
        uint Index<name="Index">;
        uint Knock_back_Type<name="Knock-back Type">;
        uint Knock_back_Lvl<name="Knock-back Lvl">;
        uint Unk_1<name="Unk 1">;
        float Motion_Value<name="Motion Value">;
        uint Unk_2<name="Unk 2">;
        uint Unk_3<name="Unk 3">;
        float Guard_Stamina_Cost<name="Guard Stamina Cost">;
        uint Guard_Req<name="Guard Req">;
        uint Element_Id<name="Element Id">;
        uint Unk_4<name="Unk 4">;
        float Element_Dmg<name="Element Dmg">;
        float Unk_5<name="Unk 5">;
        float Deadly_Poison<name="Deadly Poison">;
        float Paralysis<name="Paralysis">;
        float Sleep<name="Sleep">;
        float Blast<name="Blast">;
        float Blast_Scourge<name="Blast Scourge">;
        float Stun<name="Stun">;
        float Bleed<name="Bleed">;
        float Miasma<name="Miasma">;
        ubyte Ele_Res_Down_Double<name="Ele Res Down Double">;
        ubyte Ele_Res_Down<name="Ele Res Down">;
        ubyte Def_Down_Double<name="Def Down Double">;
        ubyte Def_Down<name="Def Down">;
        uint Unk_6<name="Unk 6">;
        uint Unk_7<name="Unk 7">;
        float Unk_8<name="Unk 8">;
        float Unk_9<name="Unk 9">;
        float Unk_10<name="Unk 10">;
        float Unk_11<name="Unk 11">;
        float Unk_12<name="Unk 12">;
        uint Unk_13<name="Unk 13">;
        uint Unk_14<name="Unk 14">;
        uint Unk_15<name="Unk 15">;
        ubyte Unk_16<name="Unk 16">;
        float Unk_17<name="Unk 17">;
        uint Unk_18<name="Unk 18">;
        uint Unk_19<name="Unk 19">;
        uint Unk_20<name="Unk 20">;
        uint Unk_21<name="Unk 21">;
        uint Unk_22<name="Unk 22">;
        uint Unk_23<name="Unk 23">;
        uint Unk_24<name="Unk 24">;
        uint Unk_25<name="Unk 25">;
        uint Unk_26<name="Unk 26">;
        ushort Unk_27<name="Unk 27">;
    } Atk2;

    if (Move_Type == 2) { Atk2 Atk2_[Move_Count]<optimize=false, name="Atk2">; }

    // Atk3
    typedef struct {
        uint Index<name="Index">;
        uint Damage_Type_1<name="Damage Type 1">;
        uint Damage_Type_2<name="Damage Type 2">;
        float Damage_Motion_Value<name="Damage Motion Value">;
        float Fixed_Damage<name="Fixed Damage">;
        float Modifier_PartDamage<name="Modifier PartDamage">;
        uint Element_Type<name="Element Type">;
        float Fixed_Elemental_Damage<name="Fixed Elemental Damage">;
        float Modifier_Element<name="Modifier Element">;
        float Modifier_Status<name="Modifier Status">;
        float Fixed_Status_Value_Poison<name="Fixed Status Value: Poison">;
        float Fixed_Status_Value_Paralysis<name="Fixed Status Value: Paralysis">;
        float Fixed_Status_Value_Sleep<name="Fixed Status Value: Sleep">;
        float Fixed_Status_Value_Blast<name="Fixed Status Value: Blast">;
        float Extra_Stun<name="Extra Stun">;
        float Extra_Exhaust<name="Extra Exhaust">;
        float Fixed_Status_Value_Traq<name="Fixed Status Value: Traq">;
        float Unk_1<name="Unk 1">;
        float Unk_2<name="Unk 2">;
        float Soften_Value<name="Soften Value">;
        float Unk_3<name="Unk 3">;
        float Unk_4<name="Unk 4">;
        float Unk_5<name="Unk 5">;
        float Unk_6<name="Unk 6">;
        float Unk_7<name="Unk 7">;
        float Unk_8<name="Unk 8">;
        uint Unk_9<name="Unk 9">;
        uint Unk_10<name="Unk 10">;
        uint Unk_11<name="Unk 11">;
        uint Unk_12<name="Unk 12">;
        uint Unk_13<name="Unk 13">;
        uint Unk_14<name="Unk 14">;
        byte Unk_15<name="Unk 15">;
        ubyte Unk_16<name="Unk 16">;
        ubyte Unk_17<name="Unk 17">;
        uint Unk_18<name="Unk 18">;
        uint Unk_19<name="Unk 19">;
        float Unk_20<name="Unk 20">;
        uint Unk_21<name="Unk 21">;
        ubyte Piercing_Attack<name="Piercing Attack">;
        float Delay_Between_Attack_Frames<name="Delay Between Attack Frames">;
        ubyte Unk_22<name="Unk 22">;
        uint Unk_23<name="Unk 23">;
        uint Unk_24<name="Unk 24">;
        uint Unk_25<name="Unk 25">;
        uint Unk_26<name="Unk 26">;
        uint Unk_27<name="Unk 27">;
        uint Unk_28<name="Unk 28">;
        uint Unk_29<name="Unk 29">;
        uint Unk_30<name="Unk 30">;
        uint Unk_31<name="Unk 31">;
        uint Unk_32<name="Unk 32">;
        uint Unk_33<name="Unk 33">;
        ushort Unk_34<name="Unk 34">;
    } Atk3;

    if (Move_Type == 3) { Atk3 Atk3_[Move_Count]<optimize=false, name="Atk3">; }
} Moves;

Moves Moves_<name="Moves">;

// OAP
typedef struct {
    uint Magic_1<name="Magic 1">;
    uint Magic_2<name="Magic 2">;
    char Name[4]<optimize=false, name="Name">;
    uint Magic_3<name="Magic 3">;

    // End Junk
    typedef struct {
        ubyte Unk<name="Unk">;
    } End_Junk;

    End_Junk End_Junk_<name="End Junk">;
} OAP;

OAP OAP_<name="OAP">;

//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//   Authors: Many. See MHW Editor Cretits.
// File Mask: *.w08p
//  Category: MHW-Editor
//------------------------------------------------

char Weapon[4]<optimize=false, name="Weapon">;
uint Unk_1<name="Unk 1">;

// Unk Arr 1 (Shared)
typedef struct {
    float Unk_1<name="Unk 1">;
    float Unk_2<name="Unk 2">;
    float Unk_3<name="Unk 3">;
    ubyte Unk_4<name="Unk 4">;
    float Unk_5<name="Unk 5">;
} Unk_Arr_1_Shared_;

Unk_Arr_1_Shared_ Unk_Arr_1_Shared__[20]<optimize=false, name="Unk Arr 1 (Shared)">;

float Unk_2<name="Unk 2">;
float Unk_3<name="Unk 3">;
float Unk_4<name="Unk 4">;
float Unk_5<name="Unk 5">;
float Unk_6<name="Unk 6">;
float Unk_7<name="Unk 7">;
float Unk_8<name="Unk 8">;
float Unk_9<name="Unk 9">;
float Unk_10<name="Unk 10">;
float Unk_11<name="Unk 11">;
float Unk_12<name="Unk 12">;
float Unk_13<name="Unk 13">;
float Unk_14<name="Unk 14">;
float Unk_15<name="Unk 15">;
float Unk_16<name="Unk 16">;
float Unk_17<name="Unk 17">;
ubyte Sharpness_Consumed_Melee_Only_<name="Sharpness Consumed (Melee Only)">;
ubyte Guard_Knockback_Sharpness_Usage_Small<name="Guard Knockback Sharpness Usage: Small">;
ubyte Guard_Knockback_Sharpness_Usage_Medium<name="Guard Knockback Sharpness Usage: Medium">;
ubyte Guard_Knockback_Sharpness_Usage_Large<name="Guard Knockback Sharpness Usage: Large">;
float Weapon_Sweet_spot<name="Weapon Sweet-spot">;
float Unk_23<name="Unk 23">;
float Unk_24<name="Unk 24">;
float Elderseal_Modifier_<name="Elderseal Modifier?">;
ubyte Unk_26<name="Unk 26">;
float Unk_27<name="Unk 27">;

// Guard Angles (Shared)
typedef struct {
    float Guard_Angle_Both_Sides_<name="Guard Angle (Both Sides)">;
    ubyte Knockback_Threshold_Small<name="Knockback Threshold Small">;
    ubyte Knockback_Threshold_Medium<name="Knockback Threshold Medium">;
    ubyte Knockback_Threshold_Large<name="Knockback Threshold Large">;
} Guard_Angles_Shared_;

Guard_Angles_Shared_ Guard_Angles_Shared__[2]<optimize=false, name="Guard Angles (Shared)">;

float Unk_28<name="Unk 28">;
float Unk_29<name="Unk 29">;
float Unk_30<name="Unk 30">;
float Unk_31<name="Unk 31">;
float Unk_32<name="Unk 32">;
float Unk_33<name="Unk 33">;
float Unk_34<name="Unk 34">;
float Unk_35<name="Unk 35">;
float Unk_36<name="Unk 36">;
float Unk_37<name="Unk 37">;
float Unk_38<name="Unk 38">;
float Unk_39<name="Unk 39">;
float Unk_40<name="Unk 40">;
float Unk_41<name="Unk 41">;
float Unk_42<name="Unk 42">;
float Unk_43<name="Unk 43">;
float Unk_44<name="Unk 44">;
float Unk_45<name="Unk 45">;
float Unk_46<name="Unk 46">;
float Unk_47<name="Unk 47">;
float Unk_48<name="Unk 48">;
uint Unk_49<name="Unk 49">;
uint Unk_50<name="Unk 50">;
float Unk_51<name="Unk 51">;
float Unk_52<name="Unk 52">;
float Unk_53<name="Unk 53">;
float Unk_54<name="Unk 54">;
float Unk_55<name="Unk 55">;
float Unk_56<name="Unk 56">;
float Unk_57<name="Unk 57">;
float Unk_58<name="Unk 58">;
float Unk_59<name="Unk 59">;
float Unk_60<name="Unk 60">;
float Unk_61<name="Unk 61">;
float Unk_62<name="Unk 62">;
float Unk_63<name="Unk 63">;
float Unk_64<name="Unk 64">;
float Unk_65<name="Unk 65">;
float Unk_66<name="Unk 66">;
float Unk_67<name="Unk 67">;
float Unk_68<name="Unk 68">;
float Unk_69<name="Unk 69">;
float Unk_70<name="Unk 70">;
float Unk_71<name="Unk 71">;
ubyte Unk_72<name="Unk 72">;
uint Unk_73<name="Unk 73">;
float Unk_74<name="Unk 74">;
float Unk_75<name="Unk 75">;
float Unk_76<name="Unk 76">;

// Unk Arr 2 (Shared)
typedef struct {
    ubyte Unk_1<name="Unk 1">;
    int Unk_2<name="Unk 2">;
    float Unk_3<name="Unk 3">;
    float Unk_4<name="Unk 4">;
    float Unk_5<name="Unk 5">;
    float Unk_6<name="Unk 6">;
    float Unk_7<name="Unk 7">;
    float Unk_8<name="Unk 8">;
    float Unk_9<name="Unk 9">;
    float Unk_10<name="Unk 10">;
    float Unk_11<name="Unk 11">;
    float Unk_12<name="Unk 12">;
    float Unk_13<name="Unk 13">;
    float Unk_14<name="Unk 14">;
    float Unk_15<name="Unk 15">;
} Unk_Arr_2_Shared_;

Unk_Arr_2_Shared_ Unk_Arr_2_Shared__[8]<optimize=false, name="Unk Arr 2 (Shared)">;

ubyte Unk_77<name="Unk 77">;
int Unk_78<name="Unk 78">;
float Unk_79<name="Unk 79">;
float Unk_80<name="Unk 80">;
float Unk_81<name="Unk 81">;
float Unk_82<name="Unk 82">;
float Unk_83<name="Unk 83">;
float Unk_84<name="Unk 84">;
float Unk_85<name="Unk 85">;
float Unk_86<name="Unk 86">;
float Unk_87<name="Unk 87">;
float Unk_88<name="Unk 88">;
float Unk_89<name="Unk 89">;
float Unk_90<name="Unk 90">;

uint Unk_91<name="Unk 91">;
uint Unk_92<name="Unk 92">;
float Unk_93<name="Unk 93">;
float Unk_94<name="Unk 94">;

// Action Param 1
typedef struct {
    float Gravity<name="Gravity">;
    float Speed_Rate<name="Speed Rate">;
    float X_Offset<name="X Offset">;
    float Y_Offset<name="Y Offset">;
    float Z_Offset<name="Z Offset">;
} Action_Param_1;

Action_Param_1 Action_Param_1_[2]<optimize=false, name="Action Param 1">;

uint Unk_95<name="Unk 95">;
float Unk_96<name="Unk 96">;
uint Unk_97<name="Unk 97">;
float Unk_98<name="Unk 98">;
float Unk_99<name="Unk 99">;
float Unk_100<name="Unk 100">;
float Unk_101<name="Unk 101">;
float Power_Phial_Damage_Multiplier_Sword_Mode_<name="Power Phial Damage Multiplier (Sword Mode)">;
float Element_Phial_Damage_Multiplier_Sword_Mode_<name="Element Phial Damage Multiplier (Sword Mode)">;
float Stun_Buildup_Exhaust_Phial_<name="Stun Buildup (Exhaust Phial)">;
float Unk_105<name="Unk 105">;
float Unk_106<name="Unk 106">;
float Unk_107<name="Unk 107">;
float Unk_108<name="Unk 108">;
float Unk_109<name="Unk 109">;
float Unk_110<name="Unk 110">;
float Unk_111<name="Unk 111">;
ushort Unk_112<name="Unk 112">;
ushort Gauge_Amount_Regen_on_Reload<name="Gauge Amount Regen on Reload">;
ushort Unk_114<name="Unk 114">;
ushort Sword_Gauge_Regeneration_Axe_Mode_<name="Sword Gauge Regeneration (Axe Mode)">;
float Sword_Gauge_Regeneration_Interval_Axe_Mode_<name="Sword Gauge Regeneration Interval (Axe Mode)">;
ubyte Sword_Gauge_When_Switching_Between_Axe_Sword_Attack<name="Sword Gauge When Switching Between Axe/Sword Attack">;
ushort Impact_Paralysis_Poison_Amp_Threshold_to_Activate<name="Impact/Paralysis/Poison Amp Threshold to Activate">;
ushort Element_Exhaust_Amp_Threshold_to_Activate<name="Element/Exhaust Amp Threshold to Activate">;
ushort Dragon_Phial_Amp_Threshold_to_Activate<name="Dragon Phial Amp Threshold to Activate">;
ushort Unk_121<name="Unk 121">;
ushort Unk_122<name="Unk 122">;
ushort Unk_123<name="Unk 123">;
float Sword_Amp_Duration<name="Sword Amp Duration">;
uint Sword_Amp_Decay_Amount_When_Not_Fully_Charged<name="Sword Amp Decay Amount When Not Fully Charged">;
ubyte Unk_126<name="Unk 126">;
ubyte Unk_127<name="Unk 127">;
ubyte Unk_128<name="Unk 128">;
ubyte Unk_129<name="Unk 129">;
uint Unk_130<name="Unk 130">;
float Unk_131<name="Unk 131">;
float Unk_132<name="Unk 132">;
float Unk_133<name="Unk 133">;
float Unk_134<name="Unk 134">;
float Unk_135<name="Unk 135">;
float Unk_136<name="Unk 136">;
float Unk_137<name="Unk 137">;
float Unk_138<name="Unk 138">;
float Elemental_Discharge_Finisher_Damage_Multiplier<name="Elemental Discharge Finisher Damage Multiplier">;
float Zero_Sum_Elemental_Discharge_Damage_Multiplier_When_Released_Early<name="Zero Sum/Elemental Discharge Damage Multiplier When Released Early">;
float Zero_Sum_Discharge_Damage_Multiplier<name="Zero Sum Discharge Damage Multiplier">;
float Unk_142<name="Unk 142">;

// Action Param 2
typedef struct {
    float Gravity<name="Gravity">;
    float Speed_Rate<name="Speed Rate">;
    float X_Offset<name="X Offset">;
    float Y_Offset<name="Y Offset">;
    float Z_Offset<name="Z Offset">;
} Action_Param_2;

Action_Param_2 Action_Param_2_[2]<optimize=false, name="Action Param 2">;

float Unk_143<name="Unk 143">;
ushort Unk_144<name="Unk 144">;
ushort Unk_145<name="Unk 145">;
ushort Unk_146<name="Unk 146">;
ushort Unk_147<name="Unk 147">;
ushort Unk_148<name="Unk 148">;
ushort Unk_149<name="Unk 149">;
ushort Unk_150<name="Unk 150">;
ushort Unk_151<name="Unk 151">;
ushort Unk_152<name="Unk 152">;
ushort Unk_153<name="Unk 153">;
float Unk_154<name="Unk 154">;
float Unk_155<name="Unk 155">;
uint Unk_156<name="Unk 156">;
float Unk_157<name="Unk 157">;
float Unk_158<name="Unk 158">;
float Unk_159<name="Unk 159">;
float Unk_160<name="Unk 160">;
float Unk_161<name="Unk 161">;
float Unk_162<name="Unk 162">;
float Unk_163<name="Unk 163">;
float Unk_164<name="Unk 164">;
float Unk_165<name="Unk 165">;
float Unk_166<name="Unk 166">;
float Unk_167<name="Unk 167">;
float Unk_168<name="Unk 168">;
float Unk_169<name="Unk 169">;
float Unk_170<name="Unk 170">;
float Power_Axe_Duration<name="Power Axe Duration">;

// Action Param 3
typedef struct {
    float Gravity<name="Gravity">;
    float Speed_Rate<name="Speed Rate">;
    float X_Offset<name="X Offset">;
    float Y_Offset<name="Y Offset">;
    float Z_Offset<name="Z Offset">;
} Action_Param_3;

Action_Param_3 Action_Param_3_<name="Action Param 3">;

float Unk_172<name="Unk 172">;
float Unk_173<name="Unk 173">;
float Unk_174<name="Unk 174">;

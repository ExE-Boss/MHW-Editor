//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//   Authors: Many. See MHW Editor Cretits.
// File Mask: *.w03p
//  Category: MHW_Editor.Weapons
//------------------------------------------------

char Weapon[4]<optimize=false, name="Weapon">;
uint Unk_1<name="Unk 1">;

// Unk Arr 1 (Shared)
typedef struct {
    float Unk_1<name="Unk 1">;
    float Unk_2<name="Unk 2">;
    float Unk_3<name="Unk 3">;
    ubyte Unk_4<name="Unk 4">;
    float Unk_5<name="Unk 5">;
} Unk_Arr_1_Shared_;

Unk_Arr_1_Shared_ Unk_Arr_1_Shared__[20]<optimize=false, name="Unk Arr 1 (Shared)">;

float Unk_2<name="Unk 2">;
float Unk_3<name="Unk 3">;
float Unk_4<name="Unk 4">;
float Unk_5<name="Unk 5">;
float Unk_6<name="Unk 6">;
float Unk_7<name="Unk 7">;
float Unk_8<name="Unk 8">;
float Unk_9<name="Unk 9">;
float Unk_10<name="Unk 10">;
float Unk_11<name="Unk 11">;
float Unk_12<name="Unk 12">;
float Unk_13<name="Unk 13">;
float Unk_14<name="Unk 14">;
float Unk_15<name="Unk 15">;
float Unk_16<name="Unk 16">;
float Unk_17<name="Unk 17">;
ubyte Sharpness_Consumed_Melee_Only_<name="Sharpness Consumed (Melee Only)">;
ubyte Guard_Knockback_Sharpness_Usage_Small<name="Guard Knockback Sharpness Usage: Small">;
ubyte Guard_Knockback_Sharpness_Usage_Medium<name="Guard Knockback Sharpness Usage: Medium">;
ubyte Guard_Knockback_Sharpness_Usage_Large<name="Guard Knockback Sharpness Usage: Large">;
float Weapon_Sweet_spot<name="Weapon Sweet-spot">;
float Unk_23<name="Unk 23">;
float Unk_24<name="Unk 24">;
float Elderseal_Modifier_<name="Elderseal Modifier?">;
ubyte Unk_26<name="Unk 26">;
float Unk_27<name="Unk 27">;

// Guard Angles (Shared)
typedef struct {
    float Guard_Angle_Both_Sides_<name="Guard Angle (Both Sides)">;
    ubyte Knockback_Threshold_Small<name="Knockback Threshold Small">;
    ubyte Knockback_Threshold_Medium<name="Knockback Threshold Medium">;
    ubyte Knockback_Threshold_Large<name="Knockback Threshold Large">;
} Guard_Angles_Shared_;

Guard_Angles_Shared_ Guard_Angles_Shared__[2]<optimize=false, name="Guard Angles (Shared)">;

float Unk_28<name="Unk 28">;
float Unk_29<name="Unk 29">;
float Unk_30<name="Unk 30">;
float Unk_31<name="Unk 31">;
float Unk_32<name="Unk 32">;
float Unk_33<name="Unk 33">;
float Unk_34<name="Unk 34">;
float Unk_35<name="Unk 35">;
float Unk_36<name="Unk 36">;
float Unk_37<name="Unk 37">;
float Unk_38<name="Unk 38">;
float Unk_39<name="Unk 39">;
float Unk_40<name="Unk 40">;
float Unk_41<name="Unk 41">;
float Unk_42<name="Unk 42">;
float Unk_43<name="Unk 43">;
float Unk_44<name="Unk 44">;
float Unk_45<name="Unk 45">;
float Unk_46<name="Unk 46">;
float Unk_47<name="Unk 47">;
float Unk_48<name="Unk 48">;
uint Unk_49<name="Unk 49">;
uint Unk_50<name="Unk 50">;
float Unk_51<name="Unk 51">;
float Unk_52<name="Unk 52">;
float Unk_53<name="Unk 53">;
float Unk_54<name="Unk 54">;
float Unk_55<name="Unk 55">;
float Unk_56<name="Unk 56">;
float Unk_57<name="Unk 57">;
float Unk_58<name="Unk 58">;
float Unk_59<name="Unk 59">;
float Unk_60<name="Unk 60">;
float Unk_61<name="Unk 61">;
float Unk_62<name="Unk 62">;
float Unk_63<name="Unk 63">;
float Unk_64<name="Unk 64">;
float Unk_65<name="Unk 65">;
float Unk_66<name="Unk 66">;
float Unk_67<name="Unk 67">;
float Unk_68<name="Unk 68">;
float Unk_69<name="Unk 69">;
float Unk_70<name="Unk 70">;
float Unk_71<name="Unk 71">;
ubyte Unk_72<name="Unk 72">;
uint Unk_73<name="Unk 73">;
float Unk_74<name="Unk 74">;
float Unk_75<name="Unk 75">;
float Unk_76<name="Unk 76">;
ubyte Unk_77<name="Unk 77">;
int Unk_78<name="Unk 78">;

// Unk Arr 2 (Shared)
typedef struct {
    float Unk_1<name="Unk 1">;
    float Unk_2<name="Unk 2">;
    float Unk_3<name="Unk 3">;
    float Unk_4<name="Unk 4">;
    float Unk_5<name="Unk 5">;
    float Unk_6<name="Unk 6">;
    float Unk_7<name="Unk 7">;
    float Unk_8<name="Unk 8">;
    float Unk_9<name="Unk 9">;
    float Unk_10<name="Unk 10">;
    float Unk_11<name="Unk 11">;
    float Unk_12<name="Unk 12">;
    float Unk_13<name="Unk 13">;
    ubyte Unk_14<name="Unk 14">;
    int Unk_15<name="Unk 15">;
} Unk_Arr_2_Shared_;

Unk_Arr_2_Shared_ Unk_Arr_2_Shared__[8]<optimize=false, name="Unk Arr 2 (Shared)">;

float Unk_79<name="Unk 79">;
float Unk_80<name="Unk 80">;
float Unk_81<name="Unk 81">;
float Unk_82<name="Unk 82">;
float Unk_83<name="Unk 83">;
float Unk_84<name="Unk 84">;
float Unk_85<name="Unk 85">;
float Unk_86<name="Unk 86">;
float Unk_87<name="Unk 87">;
float Unk_88<name="Unk 88">;
float Unk_89<name="Unk 89">;
float Unk_90<name="Unk 90">;

float Unk_91<name="Unk 91">;
float Spirit_Gauge_Decay<name="Spirit Gauge Decay">;
float Unk_93<name="Unk 93">;
float Unk_94<name="Unk 94">;
float Unk_95<name="Unk 95">;
float Unk_96<name="Unk 96">;
float Unk_97<name="Unk 97">;
float Unk_98<name="Unk 98">;
float Unk_99<name="Unk 99">;
float Unk_100<name="Unk 100">;
float Unk_101<name="Unk 101">;
float Gauge_Required_to_Active_Foresight_That_Gives_45_I_Frames<name="Gauge Required to Active Foresight That Gives 45 I-Frames">;
float Unk_103<name="Unk 103">;
float Unk_104<name="Unk 104">;
float Unk_105<name="Unk 105">;
float Unk_106<name="Unk 106">;
float Unk_107<name="Unk 107">;
float Unk_108<name="Unk 108">;
float Unk_109<name="Unk 109">;
float Unk_110<name="Unk 110">;
float Unk_111<name="Unk 111">;
float Unk_112<name="Unk 112">;
float Gauge_Duration_White<name="Gauge Duration: White">;
float Gauge_Duration_Yellow<name="Gauge Duration: Yellow">;
float Gauge_Duration_Red<name="Gauge Duration: Red">;
uint Gauge_Consumption_for_Helm_Plus_Iai_Spirit_Slash<name="Gauge Consumption for Helm + Iai Spirit Slash">;
float Gauge_Damage_Buff_White<name="Gauge Damage Buff: White">;
float Gauge_Damage_Buff_Yellow<name="Gauge Damage Buff: Yellow">;
float Gauge_Damage_Buff_Red<name="Gauge Damage Buff: Red">;
float Unk_120<name="Unk 120">;
float Unk_121<name="Unk 121">;
float Unk_122<name="Unk 122">;
float Unk_123<name="Unk 123">;
float Gauge_No_Decay_Time_after_Spirit_Gauge_Upgrade<name="Gauge No-Decay Time after Spirit Gauge Upgrade">;
float Unk_125<name="Unk 125">;
float Foresight_Slash_Damage_Multiplier_on_Successful_Evasion<name="Foresight Slash Damage Multiplier on Successful Evasion">;
ubyte Unk_127<name="Unk 127">;
uint Unk_128<name="Unk 128">;
float Unk_129<name="Unk 129">;
ushort Unk_130<name="Unk 130">;
float Foresight_Slash_Super_Armor_Time_on_Successful_Evasion<name="Foresight Slash Super Armor Time on Successful Evasion">;
float Unk_132<name="Unk 132">;
float Unk_133<name="Unk 133">;
float Iai_Sheathe_Time<name="Iai Sheathe Time">;
float Iai_Super_Armor_on_Successful_Counter<name="Iai Super Armor on Successful Counter">;
float Iai_Spirit_Slash_Second_Hit_Part_Damage_on_Successful_Counter<name="Iai Spirit Slash Second Hit Part Damage on Successful Counter">;
float Iai_Spirit_Slash_Second_Hit_Time_Delay<name="Iai Spirit Slash Second Hit Time Delay">;

// Action Param 1
typedef struct {
    float Gravity<name="Gravity">;
    float G_Rate<name="G Rate">;
    float Momentum<name="Momentum">;
    float V_Offset<name="V Offset">;
    float H_Offset<name="H Offset">;
} Action_Param_1;

Action_Param_1 Action_Param_1_<name="Action Param 1">;

float Unk_138<name="Unk 138">;
float Unk_139<name="Unk 139">;

// Action Param 2
typedef struct {
    float Gravity<name="Gravity">;
    float G_Rate<name="G Rate">;
    float Momentum<name="Momentum">;
    float V_Offset<name="V Offset">;
    float H_Offset<name="H Offset">;
} Action_Param_2;

Action_Param_2 Action_Param_2_<name="Action Param 2">;

float Unk_140<name="Unk 140">;

// Action Param 3
typedef struct {
    float Gravity<name="Gravity">;
    float G_Rate<name="G Rate">;
    float Momentum<name="Momentum">;
    float V_Offset<name="V Offset">;
    float H_Offset<name="H Offset">;
} Action_Param_3;

Action_Param_3 Action_Param_3_[3]<optimize=false, name="Action Param 3">;

float Unk_141<name="Unk 141">;

// Action Param 4
typedef struct {
    float Gravity<name="Gravity">;
    float G_Rate<name="G Rate">;
    float Momentum<name="Momentum">;
    float V_Offset<name="V Offset">;
    float H_Offset<name="H Offset">;
} Action_Param_4;

Action_Param_4 Action_Param_4_[2]<optimize=false, name="Action Param 4">;

float Unk_142<name="Unk 142">;
float Unk_143<name="Unk 143">;
float Unk_144<name="Unk 144">;
float Unk_145<name="Unk 145">;
float Helmbreaker_Delay_Between_Hits_1_Must_be_the_2nd_value_<name="Helmbreaker Delay Between Hits 1 (Must be <= the 2nd value.)">;
float Helmbreaker_Delay_Between_Hits_2<name="Helmbreaker Delay Between Hits 2">;
uint Helmbreaker_Hit_Limit<name="Helmbreaker Hit Limit">;
float Unk_149<name="Unk 149">;
float Unk_150<name="Unk 150">;

// Action Param 5
typedef struct {
    float Gravity<name="Gravity">;
    float G_Rate<name="G Rate">;
    float Momentum<name="Momentum">;
    float V_Offset<name="V Offset">;
    float H_Offset<name="H Offset">;
} Action_Param_5;

Action_Param_5 Action_Param_5_<name="Action Param 5">;

float Unk_151<name="Unk 151">;
